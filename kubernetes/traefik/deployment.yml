---
# ServiceAccount for Traefik
apiVersion: v1
kind: ServiceAccount
metadata:
  name: traefik-ingress-controller
  namespace: traefik
automountServiceAccountToken: true

---

# Cluster Role for Traefik
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: traefik-ingress-controller
rules:
- apiGroups: [""]
  resources: ["services", "endpoints", "secrets", "configmaps", "pods", "nodes"]
  verbs: ["get", "list", "watch"]
- apiGroups: ["networking.k8s.io", "extensions"]
  resources: ["ingresses", "ingressclasses"]
  verbs: ["get", "list", "watch", "create", "update", "delete"]
- apiGroups: ["discovery.k8s.io"]
  resources: ["endpointslices"]
  verbs: ["get", "list", "watch"]
- apiGroups: ["traefik.containo.us"]
  resources: [
    "middlewares", 
    "middlewaretcps", 
    "traefikservices", 
    "ingressroutes", 
    "ingressrouteudps", 
    "ingressroutetcps", 
    "tlsstores", 
    "tlsoptions", 
    "serverstransports"
  ]
  verbs: ["get", "list", "watch", "create", "update", "delete"]

---

# Cluster Role Binding for Traefik
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: traefik-ingress-controller
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: traefik-ingress-controller
subjects:
- kind: ServiceAccount
  name: traefik-ingress-controller
  namespace: traefik

---

# ConfigMap for Traefik Configuration
apiVersion: v1
kind: ConfigMap
metadata:
  name: traefik-config
  namespace: traefik
data:
  traefik.toml: |
    [entryPoints]
      [entryPoints.web]
        address = ":80"
    
    [api]
      dashboard = true
      insecure = true
      
    [serversTransport]
      insecureSkipVerify = true

    [providers]
      [providers.kubernetesCRD]
        endpoint = "https://10.43.0.1:443"
        token = "/var/run/secrets/kubernetes.io/serviceaccount/token"

      [providers.kubernetesIngress]
        endpoint = "https://10.43.0.1:443"
        token = "/var/run/secrets/kubernetes.io/serviceaccount/token"

    [kubernetes]
      endpoint = "https://10.43.0.1:443"
      token = "/var/run/secrets/kubernetes.io/serviceaccount/token"
      timeout = 60

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: traefik
  namespace: traefik
spec:
  replicas: 2
  selector:
    matchLabels:
      app: traefik
  template:
    metadata:
      labels:
        app: traefik
    spec:
      serviceAccountName: traefik-ingress-controller
      containers:
      - name: traefik
        image: traefik:v2.9
        args:
          - "--entrypoints.web.address=:80"
          - "--api.dashboard=true"
          - "--api.insecure=true"
          - "--providers.kubernetescrd"
          - "--providers.kubernetesingress"
        ports:
          - name: web
            containerPort: 80
        volumeMounts:
        - name: config
          mountPath: /etc/traefik
        - name: kube-ca-cert
          mountPath: /etc/ssl/certs/ca-certificates.crt
          subPath: ca.crt
      volumes:
      - name: config
        configMap:
          name: traefik-config
      - name: kube-ca-cert
        configMap:
          name: kube-root-ca.crt
---

apiVersion: v1
kind: Service
metadata:
  name: traefik
  namespace: traefik
  annotations:
    metallb.universe.tf/allow-shared-ip: "traefik-static-ip"
spec:
  selector:
    app: traefik
  type: LoadBalancer
  loadBalancerIP: 10.0.1.110
  ports:
    - name: http
      port: 80
      targetPort: 80
      protocol: TCP

---

apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  name: traefik-dashboard
  namespace: traefik
spec:
  entryPoints:
    - web
  routes:
    - match: PathPrefix(`/dashboard`)
      kind: Rule
      services:
        - name: api@internal
          kind: TraefikService

