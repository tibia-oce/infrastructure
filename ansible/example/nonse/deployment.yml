# ServiceAccount for Traefik
apiVersion: v1
kind: ServiceAccount
metadata:
  name: traefik-ingress-controller
  namespace: default
automountServiceAccountToken: true

---

# Cluster Role for Traefik
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: traefik-ingress-controller
rules:
- apiGroups: [""]
  resources: ["services", "endpoints", "secrets", "configmaps", "pods", "nodes"] # Added "nodes"
  verbs: ["get", "list", "watch"]
- apiGroups: ["networking.k8s.io", "extensions"]
  resources: ["ingresses", "ingressclasses"]
  verbs: ["get", "list", "watch", "create", "update", "delete"]
- apiGroups: ["discovery.k8s.io"]
  resources: ["endpointslices"]
  verbs: ["get", "list", "watch"]
- apiGroups: ["traefik.io", "containo.us"]
  resources: ["tlsstores", "ingressroutes", "traefikservices", "middlewares", "middlewaretcps", "ingressroutetcps", "ingressrouteudps", "serverstransports", "serverstransporttcps", "tlsoptions"]
  verbs: ["get", "list", "watch", "create", "update", "delete"]

---

# Cluster Role Binding for Traefik
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: traefik-ingress-controller
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: traefik-ingress-controller
subjects:
- kind: ServiceAccount
  name: traefik-ingress-controller
  namespace: default

---

# Traefik Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: traefik
  namespace: default
  labels:
    app: traefik
spec:
  replicas: 1
  selector:
    matchLabels:
      app: traefik
  template:
    metadata:
      labels:
        app: traefik
    spec:
      serviceAccountName: traefik-ingress-controller
      containers:
      - name: traefik
        image: traefik:v3.1
        args:
        - --api.insecure=true
        - --entryPoints.web.address=:80
        - --providers.kubernetescrd
        - --serversTransport.insecureSkipVerify=true
        ports:
        - name: web
          containerPort: 80
        - name: admin
          containerPort: 8080

---

# Traefik Service (TCP/HTTP)
apiVersion: v1
kind: Service
metadata:
  name: traefik
  namespace: default
spec:
  type: LoadBalancer
  selector:
    app: traefik
  ports:
    - protocol: TCP
      port: 80
      name: web
      targetPort: 80
    - protocol: TCP
      port: 8080
      name: admin
      targetPort: 8080

---

# Whoami Deployment for HTTP
apiVersion: apps/v1
kind: Deployment
metadata:
  name: whoami
  namespace: default
  labels:
    app: traefiklabs
    task: whoami
spec:
  replicas: 2
  selector:
    matchLabels:
      app: traefiklabs
      task: whoami
  template:
    metadata:
      labels:
        app: traefiklabs
        task: whoami
    spec:
      containers:
      - name: whoami
        image: traefik/whoami
        ports:
        - containerPort: 80

---
# Whoami Service for HTTP
apiVersion: v1
kind: Service
metadata:
  name: whoami
  namespace: default
spec:
  ports:
  - name: http
    port: 80
  selector:
    app: traefiklabs
    task: whoami

---

# WhoamiTCP Deployment for TCP
apiVersion: apps/v1
kind: Deployment
metadata:
  name: whoamitcp
  namespace: default
  labels:
    app: traefiklabs
    task: whoamitcp
spec:
  replicas: 2
  selector:
    matchLabels:
      app: traefiklabs
      task: whoamitcp
  template:
    metadata:
      labels:
        app: traefiklabs
        task: whoamitcp
    spec:
      containers:
      - name: whoamitcp
        image: traefik/whoamitcp
        ports:
        - containerPort: 8080

---

# WhoamiTCP Service
apiVersion: v1
kind: Service
metadata:
  name: whoamitcp
  namespace: default
spec:
  ports:
  - protocol: TCP
    port: 8080
  selector:
    app: traefiklabs
    task: whoamitcp
